apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
   name: minio-local-storage
   namespace: mozhi
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  creationTimestamp: null
  name: tenant
  namespace: mozhi
    ## Annotations for MinIO Tenant Pods
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
scheduler:
  name: ""
spec:
  certConfig: {}
  credsSecret:
    name: tenant-creds-secret
  image: minio/minio:RELEASE.2021-10-06T23-36-31Z
  imagePullSecret: {}
  mountPath: /export
  pools:
  - resources: {}
    servers: 1
    volumeClaimTemplate:
      apiVersion: v1
      kind: persistentvolumeclaims
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 512Mi
      status: {}
    volumesPerServer: 4
    securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
  requestAutoCert: true
  users:
  - name: tenant-user-1
status:
  availableReplicas: 0
  certificates: {}
  currentState: ""
  pools: null
  revision: 0
  syncVersion: ""
  usage: {}

---
apiVersion: v1
data:
  ## Access Key for MinIO Tenant, base64 encoded (echo -n 'mozhi' | base64)
  accesskey: bW96aGk=
  ## Secret Key for MinIO Tenant, base64 encoded (echo -n 'mozhi123' | base64)
  secretkey: bW96aGkxMjM=
kind: Secret
type: Opaque
metadata:
  creationTimestamp: null
  name: tenant-creds-secret
  namespace: mozhi

---
apiVersion: v1
data:
  CONSOLE_ACCESS_KEY: YWRtaW4=
  CONSOLE_SECRET_KEY: bW96aGkxMjM=
kind: Secret
metadata:
  creationTimestamp: null
  name: tenant-user-1
  namespace: mozhi